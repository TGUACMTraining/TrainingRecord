计划
    调出昨天的bug
    继续做题{动态规划}
    或学新知识
执行
    7:55 发现bug
    8:36 完成
    8:36 开始luogu1020
    11:22 不会做，准备看解析(应该是思路错了)
    12:16 果然是思路错了
    12:35 已经通过了n^2的所有的点{
        求一个随机序列中最多有几个不上升子序列
        应该是求上升子序列的长度
        通过不断去除最长不上升子序列的方法是错的
    }
    18:00 继续修改程序
    18:19 完成 学到了新的求解最大不上升子序列的方法{
            原数组o_arr 新数组n_arr 原数组长o_length 新数组长n_length
            1.使n_arr[0]=o_arr[0]
            2.遍历o_arr {
                        如果o_arr[i]<=n_arr[n_length-1],就直接n_arr[n_length++]=o_arr[i];
                        否则，将*upper_bound(n_arr,n_arr+n_length,o_arr[i],greater<int>())替换成o_arr[i];
                    }
                    (
                        例:1924267297
                        1
                        9
                        92
                        94
                        942
                        962
                        972
                        9722
                        9922
                        9972
                        即优先保证数组的增长，否则将新元素尽量向做替换
                    )
            greater<int >对象可以被转换成函数 greater<int >()

        }
    20:14 开始学习最长公共上升子序列求法
    20:38 开始luogu1439{暴力} 
    22:43 完成{nlogn}{
        求公共序列只需要根据原序列构建一个映射关系，使原序列变得单调递增
        更新后来的序列，求出其单增最长子序列就行        
        }