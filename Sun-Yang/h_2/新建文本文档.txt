题目是这样的：
给出一串数以及一个数字 CC，要求计算出所有A−B=C 的数对的个数（不同位置的数字一样的数对算不同的数对）。

输入格式
输入共两行。

第一行，两个整数 N, C

第二行，N个整数，作为要求处理的那串数。

输出格式
一行，表示该串数中包含的满足A−B=C 的数对的个数。



这道题 直接暴力有两个TLE了  所以我看题解  里面有用STD的 有用 MAP的 有用	哈希的  
我选择了双指针
就是先排序 然后再进行指针循环 找到第一个相等的 和 第一个大于的 中间的数都是答案 

然后 相加 

关键sort(a+1,a+n+1);
int l = 1, r1 = 1 , r2 = 1;long long ans = 0;
	for(l = 1 ; l <= n ; l ++) 
	{
		while(r1 <= n && a[r1] - a[l] <= c) r1 ++;
		while(r2 <= n && a[r2] - a[l] < c ) r2 ++;
		if(a[r2] - a[l] == c && a[r1 - 1] - a[l] == c && r1 - 1 >= 1) 	
			ans += r1 - r2;
	}




