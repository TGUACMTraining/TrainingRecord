题目描述
给出一个长度为n的序列,选出其中连续且非空的一段使得这段和最大。

输入格式
第一行是一个整数，表示序列的长度n

第二行有 n 个整数,表示第i个数

输出格式
输出一行一个整数表示答案。

输入输出样例
输入
7
2 -4 3 -1 2 -4 3

输出
4


解
	
	这题又在动态规划，我第一次用的for循环两层 循环n次 每i次让他从i开始加加到n 中间每次都在比较  但是只能通过两个点 3个超时

	所以动态规划  比较第i个和第i-1个与第i个是否大于第i个  如果大于 则第i个可能是最大序列里的数 那么再比较大小即可

关键：

	for(int i = 3;i < n + 2;i ++)
	{
		scanf("%d",&a[i]);
		if(a[i]+b[i-1] >= a[i])
		{
			b[i]+=a[i] + b[i-1];
			
		}
		else b[i] = a[i];
		
		if(sum1 < b[i]) sum1 = b[i];
	}


#include<stdio.h>

int a[200003],b[200003];

int main()
{
	
	int n;
	
		scanf("%d",&n);
	
	int sum1 =  -10000;
	
		scanf("%d",&a[2]);	b[2] = a[2];
	for(int i = 3;i < n+2;i ++)
	{
		scanf("%d",&a[i]);
	
		if(a[i]+b[i-1] >= a[i])
		{
			b[i]+=a[i] + b[i-1];
			
		}
		else b[i] = a[i];
		
		if(sum1 < b[i]) sum1 = b[i];
	}
	
	printf("%d",sum1);
	
//	cout <<

}
