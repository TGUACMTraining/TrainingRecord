题目描述
为了准备一个独特的颁奖典礼，组织者在会场的一片矩形区域（可看做是平面直角坐标系的第一象限）铺上一些矩形地毯。一共有 nnn 张地毯，
编号从1到n。现在将这些地毯按照编号从小到大的顺序平行于坐标轴先后铺设，后铺的地毯覆盖在前面已经铺好的地毯之上。
地毯铺设完成后，组织者想知道覆盖地面某个点的最上面的那张地毯的编号。注意：在矩形地毯边界和四个顶点上的点也算被地毯覆盖。

输入格式
输入共n+2行。

第一行，一个整数n，表示总共有n张地毯。

接下来的n行中，第i+1行表示编号i的地毯的信息，包含四个整数a,b,g,k,

每两个整数之间用一个空格隔开，分别表示铺设地毯的左下角的坐标a,b以及地毯在x轴和y轴方向的长度。

第n+2行包含两个整数x和 y，表示所求的地面的点的坐标 x y.

输出格式
输出共1行，一个整数，表示所求地毯编号
若没有地毯 输出 -1。

题目分析
	最开始看这个还以为输出铺了多少地毯 结果输出地毯编号	
	然后还有个问题是超时   所以更新了代码

#include<iostream>

using namespace std;

int a[10001][4];

int main()
{
	int n;
	cin >> n;
	for(int i = 0	;i < n;i ++)
	{
			cin >> a[i][0]>>a[i][1]>>a[i][2]>>a[i][3];
			a[i][2]+=a[i][0];
			a[i][3]+=a[i][1];
				
	}
	int xx,yy;
	cin >> xx >> yy;
	int i = n-1;int g;
	for(;i >= 0;i --)
	{
		if(a[i][0] <= xx&&a[i][1]<=yy&&a[i][2]>= xx&&a[i][3]>=yy)
		{
			cout << i+1;break;
		}
	}
	if(i==-1) cout <<"-1";

	
}
